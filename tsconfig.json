{
    "compilerOptions": {
        // папка сборки
        "outDir": "./dist/",
        // явно подсвечивает все места, где не указан тип
        // any использовать можно, но нужно теперь явно писать any
        "noImplicitAny": true,
        // различные способы модульной сборки
        "module": "ESNext",
        "typeRoots": ["./src/@types", "./node_modules/@types"],
        // target - указываем стандарт ECMAscript, в который код будет компилироваться
        "target": "es5",
        "jsx": "react-jsx",
        // allowJs - компилятор будет обрабатывать не только ts файлы но и js
        "allowJs": true,
        "strict": true,
        // для абсолютного импорта
        "baseUrl": ".",
        "paths": {
            "*": ["./src/*"]
        },
        "moduleResolution": "node",
        // esModuleInterop позволяет работать с пакетами, которые используют
        // common js как с обычными пакетами с помощью import(export)
        // require и module.export = common js
        // import Moment from 'moment'
        // без флага esModuleInterop Moment === udefined
        // c флагом Moment === Object
        "esModuleInterop": true,
        // Если какая-то библиотека не имеет default export,
        // лоадеры вроде ts-loader или babel-loader автоматически их создают
        // вместо такого импорта
        // import * as React from 'react'
        // можно писать
        // import React from 'react'
        "allowSyntheticDefaultImports": true,
        "isolatedModules": true
        
    },
    "ts-node": {
        "compilerOptions": {
            "module": "CommonJS"
        }
    },
    "include": [
        "./config/jest/jest-setup.ts",
        "./src/**/*.ts",
        "./src/**/*.tsx",
      ],
  }
